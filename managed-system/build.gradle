buildscript { ext {
	set('SPRING_BOOT_VERSION', '2.7.3')
	set('SPRING_CLOUD_VERSION', '2021.0.3')
	set('SPRING_DEPENDENCY_MANAGEMENT_VERSION', '1.0.13.RELEASE')
}}

plugins {
	id "org.springframework.boot" version "${SPRING_BOOT_VERSION}"
	id "io.spring.dependency-management" version "${SPRING_DEPENDENCY_MANAGEMENT_VERSION}"
}

subprojects {
	group = "sefa"
	version = "latest"

	apply plugin: "java"
	sourceCompatibility = "16"

	repositories {
		mavenCentral()
	}

	if (project.name.endsWith("-service")) {
		apply plugin: "org.springframework.boot"
		apply plugin: "io.spring.dependency-management"

		dependencyManagement {
			imports {
				mavenBom "org.springframework.cloud:spring-cloud-dependencies:${SPRING_CLOUD_VERSION}"
			}
		}

		dependencies {
			// Spring Boot dependencies, using the specified Spring Boot version
			implementation 'org.springframework.boot:spring-boot-starter-aop'
			implementation 'org.springframework.boot:spring-boot-starter-web'
			implementation 'org.springframework.boot:spring-boot-starter-actuator'

			// Spring Cloud dependencies, using the specified Spring Cloud version
			if (project.name != "web-service") {
				implementation 'org.springframework.cloud:spring-cloud-starter-config'
				implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
			}

			// Add all the custom libraries (in Jar format) from the libs folder
			implementation fileTree(dir: '../libs', include: ['**/*.jar'])

			// Additional dependencies
			compileOnly 'org.projectlombok:lombok:1.18.24'
			annotationProcessor 'org.projectlombok:lombok:1.18.24'
			implementation 'io.micrometer:micrometer-registry-prometheus:1.9.3'
			implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
		}

		tasks.named("jar") {
			manifest {
				attributes("Implementation-Title": project.name, "Implementation-Version": project.version)
			}
		}

		tasks.named("test") {
			useJUnitPlatform()
		}

	}

}

